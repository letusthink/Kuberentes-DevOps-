node('beijing') {
    stage('Clone') {
        echo "1、拉取业务代码"
        git branch: 'main', url: "http://192.168.128.11:30948/root/testing.git"
        script {
            build_tag = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
        }
    }
    stage('Build') {
        container('jenkins-jnlp') {
            echo "2、构建镜像"
            sh "docker build -t 192.168.128.11/cicd/webapp-go:${build_tag} ."
        }
    }
    stage('Push') {
        container('jenkins-jnlp') {
            echo "3、推送镜像到dockerharbor仓库"
            withCredentials([usernamePassword(credentialsId: 'dockerharbor', passwordVariable: 'dockerHarborPassword', usernameVariable: 'dockerHarborUser')]) {
                sh "docker login 192.168.128.11 -u ${dockerHarborUser} -p ${dockerHarborPassword}"
                sh "docker push 192.168.128.11/cicd/webapp-go:${build_tag}"
            }
        }
    }
    stage('Deploy to devlopment') {
		def userInput = input(
            id: 'userInput',
            message: '是否交付Go项目到开发环境？',
            parameters: [
                [
                    $class: 'ChoiceParameterDefinition',
                    choices: "YES\nNO",
                    name: 'Env'
                ]
            ]
        )
        if (userInput == "YES") {
            container('jenkins-jnlp') {
                echo "4、构建业务容器到开发环境"
                sh "sed -i 's/<BUILD_TAG>/${build_tag}/' k8s-yaml/k8s-devlopment.yaml"
                sh "sed -i 's/<BRANCH_NAME>/${env.BRANCH_NAME}/' k8s-yaml/k8s-devlopment.yaml"
                sh "kubectl apply -f k8s-yaml/k8s-devlopment.yaml --validate=false"
                sh "sleep 5"
            }
        }
	}
	stage('Deploy to qatest') {	
		def userInput = input(
            id: 'userInput',
            message: '是否交付Go项目到测试环境？',
            parameters: [
                [
                    $class: 'ChoiceParameterDefinition',
                    choices: "YES\nNO",
                    name: 'Env'
                ]
            ]
        )
        echo "This is a deploy step to ${userInput}"
        if (userInput == "YES") {
            container('jenkins-jnlp') {
                echo "5、构建业务容器到测试环境"
                sh "sed -i 's/<BUILD_TAG>/${build_tag}/' k8s-yaml/k8s-qatest.yaml"
                sh "sed -i 's/<BRANCH_NAME>/${env.BRANCH_NAME}/' k8s-yaml/k8s-qatest.yaml"
                sh "kubectl apply -f k8s-yaml/k8s-qatest.yaml --validate=false"
                sh "sleep 5"
            }
        }
    }
    stage('Deploy to production') {	
		def userInput = input(
            id: 'userInput',
            message: '是否发布到生产环境？',
            parameters: [
                [
                    $class: 'ChoiceParameterDefinition',
                    choices: "YES\nNO",
                    name: 'Env'
                ]
            ]
        )
        if (userInput == "YES") {
            container('jenkins-jnlp') {
                echo "6、是否交付Go项目到生产环境？"
                sh "sed -i 's/<BUILD_TAG>/${build_tag}/' k8s-yaml/k8s-production.yaml"
                sh "sed -i 's/<BRANCH_NAME>/${env.BRANCH_NAME}/' k8s-yaml/k8s-production.yaml"
                sh "kubectl apply -f k8s-yaml/k8s-production.yaml --record --validate=false"
            }
        }
    }
}